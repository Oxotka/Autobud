#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура КУТ_ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;	
	
	УсловияОтбора = Новый Структура("Партнер", ТекущиеДанные.Ссылка);
	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", УсловияОтбора, Истина);
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "РасчетыСПоставщиками" Тогда
		ОткрытьФорму("Отчет.РасчетыСПоставщиками.Форма", ПараметрыФормы,ЭтотОбъект, ТекущиеДанные.Ссылка); 
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "РасчетыСКлиентами" Тогда
		ОткрытьФорму("Отчет.РасчетыСКлиентами.Форма", 	 ПараметрыФормы,ЭтотОбъект, ТекущиеДанные.Ссылка);  
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПолучитьТекущиеДанные(Список)
	
	Если Список.ТекущиеДанные = Неопределено Тогда // Нет текущей строки.
		Возврат Неопределено;
	ИначеЕсли Список.ТекущиеДанные.Свойство("ГруппировкаСтроки") 
		И Список.ТекущиеДанные.ГруппировкаСтроки <> Неопределено Тогда // Это строка группировки.
		Возврат Неопределено;
	Иначе
		Возврат Список.ТекущиеДанные;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура КУТ_ПриАктивизацииСтроки()
	
	ТекущиеДанные = ПолучитьТекущиеДанные(Элементы.Список);
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КУТ_РазместитьДанныеПартнера(ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура КУТ_РазместитьДанныеПартнера(Знач Партнер)
	
	Если Партнер.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПартнера = КУТ_ДанныеДляЗаполненияПоПартнеру(Партнер);
	
	Элементы.ДекорацияДолгНам.Заголовок = КУТ_НадписьВзаиморасчетов(ДанныеПартнера.ДолгНам, "Дт");
	Элементы.ДекорацияДолгНаш.Заголовок = КУТ_НадписьВзаиморасчетов(ДанныеПартнера.ДолгНаш, "Кт");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КУТ_ДанныеДляЗаполненияПоПартнеру(Знач Партнер)
	
	ДанныеПартнера = Новый Структура;
	ДанныеПартнера.Вставить("ДолгНам",          0);
	ДанныеПартнера.Вставить("ДолгНаш",         0);
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РегистрАналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РегистрАналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	РегистрАналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РегистрАналитикаУчетаПоПартнерам.Договор КАК Договор,
	|	РасчетыСКлиентами.Валюта КАК ВалютаВзаиморасчетов,
	|	РасчетыСКлиентами.ДолгКонечныйОстаток КАК ДолгКонечныйОстаток,
	|	РасчетыСКлиентами.ДолгРеглКонечныйОстаток КАК ДолгРеглКонечныйОстаток,
	|	""Клиент"" КАК ВзаиморасчетыС
	|ПОМЕСТИТЬ втВзаиморасчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам.ОстаткиИОбороты(, , Авто, , ) КАК РасчетыСКлиентами
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСКлиентами.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Партнер = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам,
	|	РегистрАналитикаУчетаПоПартнерам.Организация,
	|	РегистрАналитикаУчетаПоПартнерам.Партнер,
	|	РегистрАналитикаУчетаПоПартнерам.Контрагент,
	|	РегистрАналитикаУчетаПоПартнерам.Договор,
	|	РасчетыСПоставщиками.Валюта,
	|	РасчетыСПоставщиками.ДолгКонечныйОстаток,
	|	РасчетыСПоставщиками.ДолгРеглКонечныйОстаток,
	|	""Поставщик""
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам.ОстаткиИОбороты(, , Авто, , ) КАК РасчетыСПоставщиками
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Партнер = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втВзаиморасчеты.Партнер КАК Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА втВзаиморасчеты.ВзаиморасчетыС = ""Клиент""
	|				ТОГДА втВзаиморасчеты.ДолгКонечныйОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДолгНамРегл,
	|	СУММА(ВЫБОР
	|			КОГДА втВзаиморасчеты.ВзаиморасчетыС = ""Поставщик""
	|				ТОГДА -втВзаиморасчеты.ДолгКонечныйОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДолгНашРегл
	|ПОМЕСТИТЬ втОстРегл
	|ИЗ
	|	втВзаиморасчеты КАК втВзаиморасчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	втВзаиморасчеты.Партнер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втВзаиморасчеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втОстРегл.ДолгНамРегл ЕСТЬ NULL
	|			ТОГДА ""0""
	|		ИНАЧЕ втОстРегл.ДолгНамРегл
	|	КОНЕЦ КАК ДолгНам,
	|	ВЫБОР
	|		КОГДА втОстРегл.ДолгНашРегл ЕСТЬ NULL
	|			ТОГДА ""0""
	|		ИНАЧЕ втОстРегл.ДолгНашРегл
	|	КОНЕЦ КАК ДолгНаш
	|ИЗ
	|	втОстРегл КАК втОстРегл";
	
	Запрос.УстановитьПараметр("Ссылка", Партнер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ДанныеПартнера, Выборка);
	КонецЕсли;
	
	Возврат ДанныеПартнера;
	
КонецФункции

&НаСервереБезКонтекста
Функция КУТ_НадписьВзаиморасчетов(Знач Сумма, Знач ДтКт)
	
	КрупныйШрифт = Новый Шрифт(,11);
	МелкийШрифт = Новый Шрифт(,8);
	
	КомпонентыФС = Новый Массив;
	Если ДтКт = "Кт" Тогда
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Мы должны'") + " ", КрупныйШрифт));
		СсылкаНаОтчет = "РасчетыСПоставщиками";
	Иначе
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Должен нам'") + " ", КрупныйШрифт));
		СсылкаНаОтчет = "РасчетыСКлиентами";
	КонецЕсли;
	
	СуммаСтрокой = Формат(Сумма, "ЧДЦ=2; ЧРД=,; ЧРГ=' '; ЧН=0,00");
	ПозицияРазделителя = СтрНайти(СуммаСтрокой, ",");
	КомпонентыЧисла = Новый Массив;
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Лев(СуммаСтрокой, ПозицияРазделителя), КрупныйШрифт));
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Сред(СуммаСтрокой, ПозицияРазделителя+1), МелкийШрифт));
	КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(КомпонентыЧисла, , , , СсылкаНаОтчет));
	КомпонентыФС.Добавить(" " + Константы.ВалютаРегламентированногоУчета.Получить());
	
	Возврат Новый ФорматированнаяСтрока(КомпонентыФС, , ЦветаСтиля.ПоясняющийТекст);
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КУТ_ДекорацияДокументыНажатие(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = Новый НастройкиКомпоновкиДанных;
	
	Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партнер");
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ПравоеЗначение = ТекущиеДанные.Ссылка;
	Отбор.Использование = Истина;	
	Отбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", Настройки);	
	
	ОткрытьФорму("ЖурналДокументов.РеестрТорговыхДокументов.Форма.ФормаСписка",ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КУТ_СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("КУТ_ПриАктивизацииСтроки", 0.1, Истина);
	
КонецПроцедуры


#КонецОбласти
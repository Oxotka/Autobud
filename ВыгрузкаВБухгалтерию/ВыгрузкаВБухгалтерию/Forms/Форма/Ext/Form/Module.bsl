#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУзелОбмена();
	
	ПодготовитьСписокОбъектов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьОбъекты(Команда)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена организация", ,"Организация");
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(Период.ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите период выгрузки", ,"Период");
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(УзелОбмена) Тогда
		Элементы.УзелОбмена.Видимость = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан узел обмена", ,"УзелОбмена");
		Возврат;
	КонецЕсли;
	
	ВыгрузитьОбъектыНаСервере();
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выгрузка завершена. Загрузите объекты в Бухгалтерия предприятия");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗарегистрироватьРеализациюНаОбмен(УзлыОбмена)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Период.ДатаОкончания));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Документ.Ссылка,
	|	Документ.Контрагент,
	|	Документ.ЗаказКлиента
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Документ
	|ГДЕ
	|	Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Документ.Организация = &Организация";
	
	ТаблицаСсылок = Запрос.Выполнить().Выгрузить();
	МассивДокументов = ТаблицаСсылок.ВыгрузитьКолонку("Ссылка");
	
	Для Каждого Документ Из МассивДокументов Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Документ);
	КонецЦикла;
	
	МассивКонтрагентов = ТаблицаСсылок.ВыгрузитьКолонку("Контрагент");
	ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивКонтрагентов);
	Для Каждого Контрагент Из МассивКонтрагентов Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Контрагент);
	КонецЦикла;
	
	МассивЗаказов = ТаблицаСсылок.ВыгрузитьКолонку("ЗаказКлиента");
	ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивЗаказов);
	Для Каждого Заказ Из МассивЗаказов Цикл
		Если НЕ ЗначениеЗаполнено(Заказ) Тогда
			Продолжить;
		КонецЕсли;
		ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Заказ);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьДокументНаОбмен(УзлыОбмена, ИмяДокумента)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Период.ДатаОкончания));
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Ссылка,
	|	Документ.Контрагент
	|ИЗ
	|	Документ.%1 КАК Документ
	|ГДЕ
	|	Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Документ.Организация = &Организация";
	
	Запрос.Текст = СтрШаблон(ШаблонЗапроса, ИмяДокумента);
	ТаблицаСсылок = Запрос.Выполнить().Выгрузить();
	МассивДокументов = ТаблицаСсылок.ВыгрузитьКолонку("Ссылка");
	
	Для Каждого Документ Из МассивДокументов Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Документ);
	КонецЦикла;
	
	МассивКонтрагентов = ТаблицаСсылок.ВыгрузитьКолонку("Контрагент");
	ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивКонтрагентов);
	Для Каждого Контрагент Из МассивКонтрагентов Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Контрагент);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьСправочникНаОбмен(УзлыОбмена, ИмяСправочника)
	
	Запрос = Новый Запрос;
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	Справочник.Ссылка
	|ИЗ
	|	Справочник.%1 КАК Справочник";
	
	Запрос.Текст = СтрШаблон(ШаблонЗапроса, ИмяСправочника);
	ТаблицаСсылок = Запрос.Выполнить().Выгрузить();
	МассивСсылок = ТаблицаСсылок.ВыгрузитьКолонку("Ссылка");
	
	Для Каждого Ссылка Из МассивСсылок Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Ссылка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьОбъектыНаСервере()
	
	УзлыОбмена = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(УзелОбмена);
	
	// Регистрация на обмен
	Для Каждого ОбъектДляОбмена Из ОбъектыКОбмену Цикл
		Если НЕ ОбъектДляОбмена.Пометка Тогда
			Продолжить;
		КонецЕсли;
		ИмяОбъекта = ОбъектДляОбмена.Значение;
		
		Если СтрНачинаетсяС(ИмяОбъекта, "Документ.") Тогда
			// Документы
			ИмяДокумента = СтрЗаменить(ИмяОбъекта, "Документ.", "");
			Если ИмяДокумента = "РеализацияТоваровУслуг" Тогда
				ЗарегистрироватьРеализациюНаОбмен(УзлыОбмена);
			Иначе
				ЗарегистрироватьДокументНаОбмен(УзлыОбмена, ИмяДокумента);
			КонецЕсли;
		ИначеЕсли СтрНачинаетсяС(ИмяОбъекта, "Справочник.") Тогда
			// Справочники
			ИмяСправочника = СтрЗаменить(ИмяОбъекта, "Справочник.", "");
			ЗарегистрироватьСправочникНаОбмен(УзлыОбмена, ИмяСправочника);
		КонецЕсли;
		
	КонецЦикла;
	
	// Выгрузка
	ПараметрыОбмена = ОбменДаннымиСервер.ПараметрыОбмена();
	ПараметрыОбмена.ВидТранспортаСообщенийОбмена = Перечисления.ВидыТранспортаСообщенийОбмена.FILE;
	ПараметрыОбмена.ВыполнятьЗагрузку = Ложь;
	ПараметрыОбмена.ВыполнятьВыгрузку = Истина;
	
	ПараметрыОбмена.ДлительнаяОперацияРазрешена = Ложь;
	ПараметрыОбмена.ДлительнаяОперация          = Ложь;
	
	Отказ = Ложь;
	ОбменДаннымиСервер.ВыполнитьОбменДаннымиДляУзлаИнформационнойБазы(УзелОбмена, ПараметрыОбмена, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУзелОбмена()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СинхронизацияДанныхЧерезУниверсальныйФормат.Ссылка
	|ИЗ
	|	ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат КАК СинхронизацияДанныхЧерезУниверсальныйФормат
	|ГДЕ
	|	СинхронизацияДанныхЧерезУниверсальныйФормат.ЭтотУзел = ЛОЖЬ";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда
		УзелОбмена = Выборка.Ссылка;
	КонецЕсли;
	
	Элементы.УзелОбмена.Видимость = НЕ ЗначениеЗаполнено(УзелОбмена);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьСписокОбъектов()
	
	ОбъектыКОбмену.Добавить("Документ.РеализацияТоваровУслуг",  "Реализация товаров и услуг",  Истина, БиблиотекаКартинок.Документ);
	ОбъектыКОбмену.Добавить("Документ.СчетФактураВыданный",     "Счет-фактура выданный",       Истина, БиблиотекаКартинок.Документ);
	ОбъектыКОбмену.Добавить("Документ.ПоступлениеТоваровУслуг", "Поступление товаров и услуг", Истина, БиблиотекаКартинок.Документ);
	ОбъектыКОбмену.Добавить("Документ.СчетФактураПолученный",   "Счет-фактура полученный",     Истина, БиблиотекаКартинок.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСправочники(Команда)
	
	Если ОбъектыКОбмену.НайтиПоЗначению("Справочник.Номенклатура") = Неопределено Тогда
		ОбъектыКОбмену.Добавить("Справочник.Контрагенты",  "Контрагенты",  Ложь, БиблиотекаКартинок.Справочник);
		ОбъектыКОбмену.Добавить("Справочник.Номенклатура", "Номенклатура", Ложь, БиблиотекаКартинок.Справочник);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
#Область ПрограммныйИнтерфейс

Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Версия = "1.1";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = НСтр("ru = 'Выгрузка остатков для ВотОнЯ'");
	НоваяКоманда.Идентификатор = "ДополнительнаяОбработка_ВыгрузкаОстатков";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	НоваяКоманда.ПоказыватьОповещение = Ложь;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = НСтр("ru = 'Выгрузка остатков для ВотОнЯ (по расписанию)'");
	НоваяКоманда.Идентификатор = "ДополнительнаяОбработка_ВыгрузкаОстатковПоРасписанию";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	НоваяКоманда.ПоказыватьОповещение = Ложь;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ВыполнитьКоманду(ИдентификаторКоманды, ПараметрыВыполненияКоманды = Неопределено) Экспорт
	
	Если ИдентификаторКоманды = "ДополнительнаяОбработка_ВыгрузкаОстатковПоРасписанию" Тогда
		ВыгрузитьОстатки();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыгрузитьОстатки() Экспорт
	
	ДатаВыгрузки = ТекущаяДатаСеанса();
	СтруктураНастроек = СтруктураНастроек();
	СтруктураНастроек.Вставить("ДатаВыгрузки", ДатаВыгрузки);
	Если СтруктураНастроек.Количество() = 0 Тогда
		ЗаписьЖурналаРегистрации("ВыгрузкаОстатков",УровеньЖурналаРегистрации.Ошибка,,,"Не найдены файл параметров выгрузки");
		Возврат;
	КонецЕсли;
	
	// 1. Остатки выгружаются в XML файл в кодировке UTF-8.
	// 2. Имя файла должно быть вида STOCAT_YYYYMMDD_HHMMSS.XML
	// 3. Расширение файла XML указывать обязательно.
	ВременныйФайл = ПолучитьИмяВременногоФайла();
	Запись = Новый ЗаписьXML;
	Запись.ОткрытьФайл(ВременныйФайл, "UTF-8"); 
	Запись.ЗаписатьОбъявлениеXML(); //<?xml version="1.0" encoding="UTF-8"?>
	Запись.ЗаписатьНачалоЭлемента("STOCAT");// Stocat начало.
	
	ЗаписатьЭлементXML(Запись, "DATE", Формат(ДатаВыгрузки,"ДФ=yyyy-MM-dd"));
	ЗаписатьЭлементXML(Запись, "TIME", Формат(ДатаВыгрузки,"ДФ=HH:mm"));
	ЗаписатьЭлементXML(Запись, "STOCKDATE", Формат(ДатаВыгрузки,"ДФ=yyyy-MM-dd"));
	
	Запись.ЗаписатьНачалоЭлемента("HEAD");// HEAD начало.
	
	ЗаписатьЭлементXML(Запись, "SUPPLIER",  СтруктураНастроек.SUPPLIER);
	ЗаписатьЭлементXML(Запись, "BUYER",     СтруктураНастроек.BUYER);
	ЗаписатьЭлементXML(Запись, "SENDER",    СтруктураНастроек.SUPPLIER);
	ЗаписатьЭлементXML(Запись, "RECIPIENT", СтруктураНастроек.BUYER);
	ТаблицаОстатков = ОстаткиТоваров(СтруктураНастроек);
	ПорядковыйНомер = 1;
	Для Каждого Стр Из ТаблицаОстатков Цикл
		Запись.ЗаписатьНачалоЭлемента("POSITION");// POSITION начало.
		ЗаписатьЭлементXML(Запись, "POSITIONNUMBER",    Формат(ПорядковыйНомер,"ЧГ="));
		ЗаписатьЭлементXML(Запись, "PRODUCT",           Штрихкод(Стр.ШтрихКод));
		ЗаписатьЭлементXML(Запись, "PRODUCTIDBUYER",    Стр.Артикул);
		ЗаписатьЭлементXML(Запись, "PRODUCTIDSUPPLIER", Стр.Артикул);
		ЗаписатьЭлементXML(Запись, "DESCRIPTION",       Стр.НаименованиеПолное);
		ЗаписатьЭлементXML(Запись, "UNIT",              Строка(Стр.ЕдиницаИзмерения));
		ЗаписатьЭлементXML(Запись, "STOCKQUANTITY",     Формат(Стр.Остаток, "ЧДЦ=2; ЧС=; ЧРД=.; ЧН=0.00; ЧГ="));
		ЗаписатьЭлементXML(Запись, "PRICE",             Формат(Стр.Цена, "ЧДЦ=2; ЧС=; ЧРД=.; ЧН=0.00; ЧГ="));
		ЗаписатьЭлементXML(Запись, "NETPRICE",          Формат(Стр.ЦенаБезНДС, "ЧДЦ=2; ЧС=; ЧРД=.; ЧН=0.00; ЧГ="));
		ЗаписатьЭлементXML(Запись, "VAT",               Формат(Стр.СтавкаНДСЧислом, "ЧДЦ=2; ЧС=; ЧРД=.; ЧН=0.00; ЧГ="));
		Запись.ЗаписатьКонецЭлемента();// POSITION конец.
		ПорядковыйНомер = ПорядковыйНомер + 1;
	КонецЦикла;
	
	Запись.ЗаписатьКонецЭлемента();// HEAD конец.
	
	Запись.ЗаписатьКонецЭлемента();// Stocat конец.
	
	Запись.Закрыть();
	
	// Передача файла на FTP
	ПутьКСерверу = "ftpport.1edi.ru";
	Пользователь = "2901000013800";
	Пароль = "68741259745";
	ИмяКаталога = "/in/stocat";
	
	FTPСоединение = Новый FTPСоединение(ПутьКСерверу,21,Пользователь, Пароль);
	FTPСоединение.УстановитьТекущийКаталог(ИмяКаталога);
	ИмяФайла = "STOCAT_" + Формат(ДатаВыгрузки,"ДФ=yyyyMMdd") + "_" + Формат(ДатаВыгрузки,"ДФ=hhmmss") + ".xml";
	FTPСоединение.Записать(ВременныйФайл, ИмяФайла);
	
	ЗаписьЖурналаРегистрации("ВыгрузкаОстатков",УровеньЖурналаРегистрации.Информация,,,"Выгружены остатки на ftp");
	
КонецПроцедуры

Процедура ЗаписатьЭлементXML(ЗаписьXML, ИмяЭлемента, ЗначениеЭлемента)
	
	ЗаписьXML.ЗаписатьНачалоЭлемента(ИмяЭлемента);
	ЗаписьXML.ЗаписатьТекст(СокрЛП(ЗначениеЭлемента));
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

Функция ОстаткиТоваров(СтруктураНастроек) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	СпрНоменклатура.Артикул,
		|	СпрНоменклатура.НаименованиеПолное,
		|	СпрНоменклатура.ЕдиницаИзмерения,
		|	СпрНоменклатура.СтавкаНДС,
		|	ШтрихкодыНоменклатуры.Штрихкод
		|ПОМЕСТИТЬ ВТ_Номенклатура
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|		ПО (ШтрихкодыНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка)
		|ГДЕ
		|	&ОтборПоНоменклатуре
		|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
		|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Номенклатура.Номенклатура,
		|	ВТ_Номенклатура.Артикул,
		|	ВТ_Номенклатура.НаименованиеПолное,
		|	ВТ_Номенклатура.ЕдиницаИзмерения,
		|	ВТ_Номенклатура.СтавкаНДС,
		|	ВТ_Номенклатура.Штрихкод,
		|	СвободныеОстаткиОстатки.ВНаличииОстаток КАК Остаток,
		|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ВидЦены, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ЦеныНоменклатурыСрезПоследних.ВидЦены.ЦенаВключаетНДС
		|	КОНЕЦ КАК ЦенаВключаетНДС,
		|	0 КАК НДС,
		|	0 КАК ЦенаБезНДС,
		|	0 КАК СтавкаНДСЧислом
		|ИЗ
		|	ВТ_Номенклатура КАК ВТ_Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(
		|				&Период,
		|				&Склад = НЕОПРЕДЕЛЕНО
		|					ИЛИ Склад В ИЕРАРХИИ (&Склад)) КАК СвободныеОстаткиОстатки
		|		ПО ВТ_Номенклатура.Номенклатура = СвободныеОстаткиОстатки.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО ВТ_Номенклатура.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура";
		
	Запрос.УстановитьПараметр("Период",  СтруктураНастроек.ДатаВыгрузки);
	Запрос.УстановитьПараметр("Склад",   ?(ЗначениеЗаполнено(СтруктураНастроек.Склад), СтруктураНастроек.Склад, Неопределено));
	Запрос.УстановитьПараметр("ВидЦены", СтруктураНастроек.ВидЦены);
	Если СтруктураНастроек.ОтборНоменклатуры.Количество() = 0 Тогда
		Запрос.УстановитьПараметр("ОтборПоНоменклатуре", Истина);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоНоменклатуре", "СпрНоменклатура.Родитель В ИЕРАРХИИ(&ОтборНоменклатуры)");
		Запрос.УстановитьПараметр("ОтборНоменклатуры", СтруктураНастроек.ОтборНоменклатуры);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаОстатков = РезультатЗапроса.Выгрузить();
	Для Каждого Стр Из ТаблицаОстатков Цикл
		Стр.СтавкаНДСЧислом = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(Стр.СтавкаНДС);
		Стр.НДС = Ценообразование.РассчитатьСуммуНДС(Стр.Цена, Стр.СтавкаНДС, Стр.ЦенаВключаетНДС);
		Стр.ЦенаБезНДС = Стр.Цена - Стр.НДС;
	КонецЦикла;
	
	Возврат ТаблицаОстатков;
	
КонецФункции

Функция Штрихкод(Знач Штрихкод)
	
	Штрихкод = СокрЛП(?(ШтрихКод = Null, "", ШтрихКод));
	Возврат ?(СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Штрихкод), Штрихкод, "");
	
КонецФункции

Функция СтруктураНастроек()

	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ПутьКФайлуНастроек());
	СтруктураНастроек = Новый Структура;
	ИмяКлюча = "";
	Пока Чтение.Прочитать() Цикл
		Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Если Чтение.Имя = "Настройки" Тогда
				Продолжить;
			КонецЕсли;
			ИмяКлюча = Чтение.Имя;
		ИначеЕсли Чтение.ТипУзла=ТипУзлаXML.Текст Тогда
			СтруктураНастроек.Вставить(ИмяКлюча, ОбщегоНазначения.ЗначениеИзСтрокиXML(Чтение.Значение));
		ИначеЕсли Чтение.ТипУзла=ТипУзлаXML.КонецЭлемента Тогда
			ИмяКлюча = "";
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураНастроек;
	
КонецФункции

Функция ПутьКФайлуНастроек()
	
	Возврат "\\1c\1CData\НастройкиВыгрузкиВотОнЯ.xml";
	
КонецФункции

#КонецОбласти
#Область ПрограммныйИнтерфейс

Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Версия = "1.1";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = НСтр("ru = 'Выгрузка остатков для ВотОнЯ'");
	НоваяКоманда.Идентификатор = "ДополнительнаяОбработка_ВыгрузкаОстатков";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	НоваяКоманда.ПоказыватьОповещение = Ложь;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = НСтр("ru = 'Выгрузка остатков для ВотОнЯ (по расписанию)'");
	НоваяКоманда.Идентификатор = "ДополнительнаяОбработка_ВыгрузкаОстатковПоРасписанию";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	НоваяКоманда.ПоказыватьОповещение = Ложь;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОстаткиТоваров(СтруктураНастроек) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	СпрНоменклатура.Артикул,
		|	СпрНоменклатура.НаименованиеПолное
		|ПОМЕСТИТЬ ВТ_Номенклатура
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|ГДЕ
		|	&ОтборПоНоменклатуре
		|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
		|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Номенклатура.Номенклатура,
		|	ВТ_Номенклатура.Артикул,
		|	ВТ_Номенклатура.НаименованиеПолное,
		|	СвободныеОстаткиОстатки.ВНаличииОстаток КАК Остаток,
		|	ЕСТЬNULL(ЦенаПродажи.Цена, 0) КАК ЦенаПродажи,
		|	ЕСТЬNULL(ЦеныЗакупки.Цена, 0) КАК ЦенаЗакупки
		|ИЗ
		|	ВТ_Номенклатура КАК ВТ_Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(
		|				&Период,
		|				&Склад = НЕОПРЕДЕЛЕНО
		|					ИЛИ Склад В ИЕРАРХИИ (&Склад)) КАК СвободныеОстаткиОстатки
		|		ПО ВТ_Номенклатура.Номенклатура = СвободныеОстаткиОстатки.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦены = &ВидЦены) КАК ЦенаПродажи
		|		ПО ВТ_Номенклатура.Номенклатура = ЦенаПродажи.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦены = &ВидЦеныЗакупки) КАК ЦеныЗакупки
		|		ПО ВТ_Номенклатура.Номенклатура = ЦеныЗакупки.Номенклатура";
		
	Запрос.УстановитьПараметр("Период",  СтруктураНастроек.ДатаВыгрузки);
	Запрос.УстановитьПараметр("Склад",   ?(ЗначениеЗаполнено(СтруктураНастроек.Склад), СтруктураНастроек.Склад, Неопределено));
	Запрос.УстановитьПараметр("ВидЦены", СтруктураНастроек.ВидЦеныПродажи);
	Запрос.УстановитьПараметр("ВидЦеныЗакупки", СтруктураНастроек.ВидЦеныЗакупки);
	
	Если СтруктураНастроек.ОтборНоменклатуры.Количество() = 0 Тогда
		Запрос.УстановитьПараметр("ОтборПоНоменклатуре", Истина);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоНоменклатуре", "СпрНоменклатура.Родитель В ИЕРАРХИИ(&ОтборНоменклатуры)");
		Запрос.УстановитьПараметр("ОтборНоменклатуры", СтруктураНастроек.ОтборНоменклатуры);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаОстатков = РезультатЗапроса.Выгрузить();
	Возврат ТаблицаОстатков;
	
КонецФункции

#КонецОбласти
#Область ЗадолженностьКлиента

Функция ЗадолженностьКлиента(Партнер, Организация)
	
	ЗадолженностьКлиента = Новый Структура;
	ЗадолженностьКлиента.Вставить("ПоОрганизации", 0);
	ЗадолженностьКлиента.Вставить("Всего", 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаОстаток, 0)) КАК ПоОрганизации
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(, ) КАК РасчетыСКлиентамиОстатки
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСКлиентамиОстатки.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Партнер = &Партнер
	|	И РегистрАналитикаУчетаПоПартнерам.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаОстаток, 0)) КАК Всего
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(, ) КАК РасчетыСКлиентамиОстатки
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСКлиентамиОстатки.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Партнер = &Партнер";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаПоОрганизации = РезультатЗапроса[0].Выбрать();
	Если ВыборкаПоОрганизации.Следующий() Тогда
		ЗадолженностьКлиента.ПоОрганизации = ВыборкаПоОрганизации.ПоОрганизации;
	КонецЕсли;
	ВыборкаВсего = РезультатЗапроса[1].Выбрать();
	Если ВыборкаВсего.Следующий() Тогда
		ЗадолженностьКлиента.Всего = ВыборкаВсего.Всего;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЗадолженностьКлиента.ПоОрганизации) Тогда
		ЗадолженностьКлиента.ПоОрганизации = 0;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ЗадолженностьКлиента.Всего) Тогда
		ЗадолженностьКлиента.Всего = 0;
	КонецЕсли;
	
	Возврат ЗадолженностьКлиента;
	
КонецФункции

Функция НадписьЗадолженностьКлиента(СуммаДолга) Экспорт
	
	КрупныйШрифт = Новый Шрифт(,11);
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Должен нам'") + " ", КрупныйШрифт, ЦветаСтиля.ПоясняющийТекст));
	
	СуммаСтрокой = Формат(СуммаДолга, "ЧДЦ=2; ЧРД=,; ЧРГ=' '; ЧН=0,00");
	ПозицияРазделителя = СтрНайти(СуммаСтрокой, ",");
	КомпонентыЧисла = Новый Массив;
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Лев(СуммаСтрокой, ПозицияРазделителя), КрупныйШрифт));
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Сред(СуммаСтрокой, ПозицияРазделителя+1), Новый Шрифт(,8)));
	
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(КомпонентыЧисла, , , , "Взаиморасчеты"));
	
	Возврат Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецФункции

Функция НадписьЗадолженностьКлиентаВДокументе(СуммаДолга, ПоОрганизации = Истина) Экспорт
	
	КрупныйШрифт = Новый Шрифт(,11);
	
	МассивСтрок = Новый Массив;
	Если ПоОрганизации Тогда
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='По организации'") + " ", КрупныйШрифт, ЦветаСтиля.ПоясняющийТекст));
	Иначе
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Должен всего'") + " ", КрупныйШрифт, ЦветаСтиля.ПоясняющийТекст));
	КонецЕсли;
	
	СуммаСтрокой = Формат(СуммаДолга, "ЧДЦ=2; ЧРД=,; ЧРГ=' '; ЧН=0,00");
	ПозицияРазделителя = СтрНайти(СуммаСтрокой, ",");
	КомпонентыЧисла = Новый Массив;
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Лев(СуммаСтрокой, ПозицияРазделителя), КрупныйШрифт));
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Сред(СуммаСтрокой, ПозицияРазделителя+1), Новый Шрифт(,8)));
	
	Если ПоОрганизации Тогда
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(КомпонентыЧисла, , , , "ВзаиморасчетыПоОрганизации"));
	Иначе
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(КомпонентыЧисла, , , , "Взаиморасчеты"));
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецФункции

Процедура УстановитьЗадолженностьКлиента(Форма, Объект) Экспорт
	
	Элементы = Форма.Элементы;
	Если НЕ ЗначениеЗаполнено(Объект.Организация) ИЛИ НЕ ЗначениеЗаполнено(Объект.Партнер) Тогда
		Элементы.ГруппаОстатокВзаиморасчетов.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	Если НЕ ПравоДоступа("Просмотр", Метаданные.РегистрыНакопления.РасчетыСКлиентами) Тогда
		Элементы.ГруппаОстатокВзаиморасчетов.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаОстатокВзаиморасчетов.Видимость = Истина;
	
	ЗадолженностьКлиента = ЗадолженностьКлиента(Объект.Партнер, Объект.Организация);
	Элементы.ОстатокВзаиморасчетовКлиентПоОрганизации.Заголовок = 
		НадписьЗадолженностьКлиентаВДокументе(ЗадолженностьКлиента.ПоОрганизации, Истина);
	Элементы.ОстатокВзаиморасчетовКлиент.Заголовок = 
		НадписьЗадолженностьКлиентаВДокументе(ЗадолженностьКлиента.Всего, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ЗадолженностьПоставщика

Функция ЗадолженностьПоставщика(Партнер, Организация)
	
	ЗадолженностьПоставщика = Новый Структура;
	ЗадолженностьПоставщика.Вставить("ПоОрганизации", 0);
	ЗадолженностьПоставщика.Вставить("Всего", 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	-СУММА(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0)) КАК ПоОрганизации
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Остатки(, ) КАК РасчетыСПоставщикамиОстатки
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСПоставщикамиОстатки.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Партнер = &Партнер
	|	И РегистрАналитикаУчетаПоПартнерам.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	-СУММА(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0)) КАК Всего
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Остатки(, ) КАК РасчетыСПоставщикамиОстатки
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСПоставщикамиОстатки.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Партнер = &Партнер";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаПоОрганизации = РезультатЗапроса[0].Выбрать();
	Если ВыборкаПоОрганизации.Следующий() Тогда
		ЗадолженностьПоставщика.ПоОрганизации = ВыборкаПоОрганизации.ПоОрганизации;
	КонецЕсли;
	ВыборкаВсего = РезультатЗапроса[1].Выбрать();
	Если ВыборкаВсего.Следующий() Тогда
		ЗадолженностьПоставщика.Всего = ВыборкаВсего.Всего;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЗадолженностьПоставщика.ПоОрганизации) Тогда
		ЗадолженностьПоставщика.ПоОрганизации = 0;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ЗадолженностьПоставщика.Всего) Тогда
		ЗадолженностьПоставщика.Всего = 0;
	КонецЕсли;
	
	Возврат ЗадолженностьПоставщика;
	
КонецФункции

Функция НадписьЗадолженностьПоставщика(СуммаДолга) Экспорт
	
	КрупныйШрифт = Новый Шрифт(,11);
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Мы должны'") + " ", КрупныйШрифт, ЦветаСтиля.ПоясняющийТекст));
	
	СуммаСтрокой = Формат(СуммаДолга, "ЧДЦ=2; ЧРД=,; ЧРГ=' '; ЧН=0,00");
	ПозицияРазделителя = СтрНайти(СуммаСтрокой, ",");
	КомпонентыЧисла = Новый Массив;
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Лев(СуммаСтрокой, ПозицияРазделителя), КрупныйШрифт));
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Сред(СуммаСтрокой, ПозицияРазделителя+1), Новый Шрифт(,8)));
	
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(КомпонентыЧисла, , , , "Взаиморасчеты"));
	
	Возврат Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецФункции

Функция НадписьЗадолженностьПоставщикаВДокументе(СуммаДолга, ПоОрганизации = Истина) Экспорт
	
	КрупныйШрифт = Новый Шрифт(,11);
	
	МассивСтрок = Новый Массив;
	Если ПоОрганизации Тогда
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='По организации'") + " ", КрупныйШрифт, ЦветаСтиля.ПоясняющийТекст));
	Иначе
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Должны всего'") + " ", КрупныйШрифт, ЦветаСтиля.ПоясняющийТекст));
	КонецЕсли;
	
	СуммаСтрокой = Формат(СуммаДолга, "ЧДЦ=2; ЧРД=,; ЧРГ=' '; ЧН=0,00");
	ПозицияРазделителя = СтрНайти(СуммаСтрокой, ",");
	КомпонентыЧисла = Новый Массив;
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Лев(СуммаСтрокой, ПозицияРазделителя), КрупныйШрифт));
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Сред(СуммаСтрокой, ПозицияРазделителя+1), Новый Шрифт(,8)));
	
	Если ПоОрганизации Тогда
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(КомпонентыЧисла, , , , "ВзаиморасчетыПоОрганизации"));
	Иначе
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(КомпонентыЧисла, , , , "Взаиморасчеты"));
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецФункции

Процедура УстановитьЗадолженностьПоставщика(Форма, Объект) Экспорт
	
	Элементы = Форма.Элементы;
	Если НЕ ЗначениеЗаполнено(Объект.Организация) ИЛИ НЕ ЗначениеЗаполнено(Объект.Партнер) Тогда
		Элементы.ГруппаОстатокВзаиморасчетов.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	Если НЕ ПравоДоступа("Просмотр", Метаданные.РегистрыНакопления.РасчетыСПоставщиками) Тогда
		Элементы.ГруппаОстатокВзаиморасчетов.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаОстатокВзаиморасчетов.Видимость = Истина;
	
	ЗадолженностьПоставщика = ЗадолженностьПоставщика(Объект.Партнер, Объект.Организация);
	Элементы.ОстатокВзаиморасчетовПоставщикПоОрганизации.Заголовок = 
		НадписьЗадолженностьПоставщикаВДокументе(ЗадолженностьПоставщика.ПоОрганизации, Истина);
	Элементы.ОстатокВзаиморасчетовПоставщик.Заголовок = 
		НадписьЗадолженностьПоставщикаВДокументе(ЗадолженностьПоставщика.Всего, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ЗадолженностьПартнера

Функция ЗадолженностьПартнера(Партнер) Экспорт
	
	ЗадолженностьПартнера = Новый Структура;
	ЗадолженностьПартнера.Вставить("МыДолжны", 0);
	ЗадолженностьПартнера.Вставить("НамДолжны", 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	-СУММА(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0)) КАК МыДолжны
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Остатки(, ) КАК РасчетыСПоставщикамиОстатки
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСПоставщикамиОстатки.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Партнер = &Партнер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаОстаток, 0)) КАК НамДолжны
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(, ) КАК РасчетыСКлиентамиОстатки
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСКлиентамиОстатки.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Партнер = &Партнер";

	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаПоставщик = РезультатЗапроса[0].Выбрать();
	Если ВыборкаПоставщик.Следующий() Тогда
		ЗадолженностьПартнера.МыДолжны = ВыборкаПоставщик.МыДолжны;
	КонецЕсли;
	ВыборкаКлиент = РезультатЗапроса[1].Выбрать();
	Если ВыборкаКлиент.Следующий() Тогда
		ЗадолженностьПартнера.НамДолжны = ВыборкаКлиент.НамДолжны;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЗадолженностьПартнера.МыДолжны) Тогда
		ЗадолженностьПартнера.МыДолжны = 0;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ЗадолженностьПартнера.НамДолжны) Тогда
		ЗадолженностьПартнера.НамДолжны = 0;
	КонецЕсли;
	
	Возврат ЗадолженностьПартнера;
	
КонецФункции

Функция ЗадолженностьКонтрагента(Контрагент) Экспорт
	
	ЗадолженностьКонтрагента = Новый Структура;
	ЗадолженностьКонтрагента.Вставить("МыДолжны", 0);
	ЗадолженностьКонтрагента.Вставить("НамДолжны", 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	-СУММА(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0)) КАК МыДолжны
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Остатки(, ) КАК РасчетыСПоставщикамиОстатки
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСПоставщикамиОстатки.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Контрагент = &Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаОстаток, 0)) КАК НамДолжны
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(, ) КАК РасчетыСКлиентамиОстатки
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСКлиентамиОстатки.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Контрагент = &Контрагент";

	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаПоставщик = РезультатЗапроса[0].Выбрать();
	Если ВыборкаПоставщик.Следующий() Тогда
		ЗадолженностьКонтрагента.МыДолжны = ВыборкаПоставщик.МыДолжны;
	КонецЕсли;
	ВыборкаКлиент = РезультатЗапроса[1].Выбрать();
	Если ВыборкаКлиент.Следующий() Тогда
		ЗадолженностьКонтрагента.НамДолжны = ВыборкаКлиент.НамДолжны;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЗадолженностьКонтрагента.МыДолжны) Тогда
		ЗадолженностьКонтрагента.МыДолжны = 0;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ЗадолженностьКонтрагента.НамДолжны) Тогда
		ЗадолженностьКонтрагента.НамДолжны = 0;
	КонецЕсли;
	
	Возврат ЗадолженностьКонтрагента;
	
КонецФункции

#КонецОбласти

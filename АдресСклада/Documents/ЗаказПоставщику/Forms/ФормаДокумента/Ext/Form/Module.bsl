#Область ОбработчикиСобытийФормы

&НаСервере
Процедура АдресСклада_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	ДополнитьСписокВыбораАдресов();
	
	Если Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Объект.Склад) Тогда
		// Установим адрес доставки по складу.
		Объект.АдресДоставкиДляПоставщика = СтруктураАдресаСклада(Объект.Склад).Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АдресСклада_ПриЗагрузкеДанныхИзНастроекНаСервереПосле(Настройки)
	
	Если Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Объект.Склад) Тогда
		// Установим адрес доставки по складу.
		Объект.АдресДоставкиДляПоставщика = СтруктураАдресаСклада(Объект.Склад).Значение;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресСклада_ОрганизацияПриИзмененииПосле(Элемент)
	
	АдресСклада_ОрганизацияПриИзмененииПослеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСклада_СкладПриИзмененииПосле(Элемент)
	
	АдресСклада_СкладПриИзмененииПослеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСклада_ПартнерПриИзмененииПосле(Элемент)
	АдресСклада_ПартнерПриИзмененииПослеНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СтруктураАдресаСклада(Склад)
	
	СтруктураАдреса = Новый Структура("Представление, Значение", "", "");
	
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Возврат СтруктураАдреса;
	КонецЕсли;
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Склад);
	
	Адреса = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
		МассивОбъектов, 
		Перечисления.ТипыКонтактнойИнформации.Адрес);
	Если Адреса.Количество() > 0 Тогда
		Адрес = Адреса[0];
	Иначе
		Возврат СтруктураАдреса;
	КонецЕсли;
	
	Телефоны = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
		МассивОбъектов, 
		Перечисления.ТипыКонтактнойИнформации.Телефон);
		
	Если Телефоны.Количество() > 0 Тогда
		Телефон = Телефоны[0];
	Иначе
		Телефон = Новый Структура("Представление");
	КонецЕсли;
	СтруктураАдреса.Значение = СтрШаблон("%1, %2", Адрес.Представление, Телефон.Представление);
	СтруктураАдреса.Представление = СтрШаблон("%1: %2, %3", Строка(Адрес.Вид), Адрес.Представление, Телефон.Представление);
	
	Возврат СтруктураАдреса;
	
КонецФункции

&НаСервере
Процедура ДополнитьСписокВыбораАдресов()

	Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураАдреса = СтруктураАдресаСклада(Объект.Склад);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеДоставкой") Тогда
		ЭлементАдреса = Элементы.АдресДоставкиДляПоставщика;
	Иначе
		ЭлементАдреса = Элементы.АдресДоставкиДляПоставщика2;
	КонецЕсли;
	
	ЭлементАдреса.СписокВыбора.Добавить(СтруктураАдреса.Значение, СтруктураАдреса.Представление);
	
КонецПроцедуры

&НаСервере
Процедура АдресСклада_ОрганизацияПриИзмененииПослеНаСервере()
	
	ДополнитьСписокВыбораАдресов();
	Объект.АдресДоставкиДляПоставщика = СтруктураАдресаСклада(Объект.Склад).Значение;
	
КонецПроцедуры

&НаСервере
Процедура АдресСклада_СкладПриИзмененииПослеНаСервере()
	
	// Восстановим список выбора адресов по организации.
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеДоставкой") Тогда
		ЭлементДоставки = Элементы.АдресДоставкиДляПоставщика;
	Иначе
		ЭлементДоставки = Элементы.АдресДоставкиДляПоставщика2;
	КонецЕсли;
	ПродажиСервер.ЗаполнитьСписокВыбораАдреса(ЭлементДоставки, Объект.Организация);
	
	// Дополним список адресов по складу.
	ДополнитьСписокВыбораАдресов();
	
	Объект.АдресДоставкиДляПоставщика = СтруктураАдресаСклада(Объект.Склад).Значение;
	
КонецПроцедуры

&НаСервере
Процедура АдресСклада_ПартнерПриИзмененииПослеНаСервере()
	
	ДополнитьСписокВыбораАдресов();
	Объект.АдресДоставкиДляПоставщика = СтруктураАдресаСклада(Объект.Склад).Значение;
	
КонецПроцедуры

#КонецОбласти
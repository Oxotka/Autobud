
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПодборТоваров_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Документ) Тогда
		ТипДокумента = ТипЗнч(Параметры.Документ);
		Если ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику")
			Или ТипДокумента =  Тип("ДокументСсылка.ЗаказКлиента")
			Или ТипДокумента =  Тип("ДокументСсылка.ЧекККМ") Тогда
			ЭтоРасширеннаяФорма = Истина;
		КонецЕсли;
	КонецЕсли;
	Элементы.ГруппаСкладов.Видимость = ЭтоРасширеннаяФорма;
	ИзменитьТекстЗапроса();
	Если ЭтоРасширеннаяФорма Тогда
		СкладДляСоединения = Параметры.Склад;
		ПодборТоваров_УстановитьУсловноеОформлениеДинамическихСписков(ЭтаФорма, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодборТоваров_ИспользоватьФильтрыПриИзмененииВместо(Элемент)
	ПодборТоваров_ИспользоватьФильтрыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПодборТоваров_ИспользоватьФильтрыПриИзмененииНаСервере()
	
	ПодборТоваровСервер.ПриИзмененииИспользованияФильтров(ЭтаФорма);
	ИзменитьТекстЗапроса();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыСписокРасширенныйПоискНоменклатура

&НаКлиенте
Процедура ПодборТоваров_СписокРасширенныйПоискНоменклатураВыборВместо(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Если выбрана колонка "Ожидается", тогда открываем отчет, иначе стандартное поведение.
	Если Поле.Имя = "СписокРасширенныйПоискНоменклатураОжидается" Тогда
		ОткрытьОтчетПоступлениеИОтгрузкаТоваров();
	Иначе
		// Проверить выбранную строку номенклатуры.
		Оповещение = Новый ОписаниеОповещения("ПодборТаблицаНоменклатураВыборЗавершение", ЭтотОбъект, 
			Новый Структура("Элемент", Элемент));
		ПодборТоваровКлиент.ПриВыбореСтрокиТаблицыНоменклатуры(ЭтаФорма, Оповещение);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВидыНоменклатуры

&НаКлиенте
Процедура ПодборТоваров_ВидыНоменклатурыПриАктивизацииСтрокиВместо(Элемент)
		
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(
		"ОбщийМодуль.ПодборТоваровКлиент.ПриАктивизацииСтрокиСпискаВидыНоменклатуры");
	
	Если Не (ВариантНавигации = ПредопределенноеЗначение("Перечисление.ВариантыНавигацииВФормахНоменклатуры.ПоСвойствам")
		Или ВариантНавигации = ПредопределенноеЗначение("Перечисление.ВариантыНавигацииВФормахНоменклатуры.ПоВидамИСвойствам")
		Или ВариантНавигации = ПредопределенноеЗначение("Перечисление.ВариантыНавигацииВФормахНоменклатуры.ПоВидам")) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ВидыНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено
		Или ВидНоменклатуры = ТекущиеДанные.Ссылка Тогда
		Возврат;
	КонецЕсли;
	
	ВидНоменклатуры = ТекущиеДанные.Ссылка;

	Если Не ИспользоватьФильтры Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоРасширеннаяФорма Тогда
		ПодключитьОбработчикОжидания("ПодборТоваров_ВидыНоменклатурыПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
	Иначе
		ПодключитьОбработчикОжидания("ВидыНоменклатурыПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодборТоваров_ВидыНоменклатурыПриАктивизацииСтрокиОбработчикОжидания()
	
	ТекущиеДанные = Элементы.ВидыНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
	
		ПодборТоваров_ВидыНоменклатурыПриАктивизацииСтрокиПослеНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодборТоваров_ВидыНоменклатурыПриАктивизацииСтрокиПослеНаСервере()

	ПодборТоваровСервер.ПриИзмененииВидаНоменклатуры(ЭтаФорма);
	
	Если СтрНайти(СписокНоменклатура.ТекстЗапроса, "ГрафикПоступленияТоваровОстатки") > 0 Тогда
		Возврат;
	КонецЕсли;
	ИзменитьТекстЗапроса();

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетПоступлениеИОтгрузкаТоваров()
	
	ТекущиеДанныеИнформацииПоСкладам = Элементы.СписокРасширенныйПоискНоменклатура.ТекущиеДанные;
	Если ТекущиеДанныеИнформацииПоСкладам = Неопределено ИЛИ ТекущиеДанныеИнформацииПоСкладам.Ожидается = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = ТекущиеДанныеСписка();
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Номенклатура = ТекущиеДанные.Номенклатура;
	Склад        = СкладДляСоединения;
	Отбор        = Новый Структура("Номенклатура", Номенклатура);
	
	Если ЗначениеЗаполнено(Склад) Тогда
		Отбор.Вставить("Склад", Склад);
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", Отбор, Истина);
	
	ОткрытьФорму("Отчет.ПоступлениеИОтгрузкаТоваров.Форма", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ТекущиеДанныеСписка()
	
	Если Элементы.СтраницыСписков.ТекущаяСтраница = Элементы.СтраницаРасширенныйПоискНоменклатура Тогда
		ТекущиеДанные = Элементы.СписокРасширенныйПоискНоменклатура.ТекущиеДанные;
	Иначе
		ТекущиеДанные = Элементы.СписокСтандартныйПоискНоменклатура.ТекущиеДанные;
	КонецЕсли;
	
	Возврат ТекущиеДанные;
	
КонецФункции

&НаСервере
Процедура ИзменитьТекстЗапроса()
	
	Если Не ЭтоРасширеннаяФорма Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(СписокНоменклатура.ТекстЗапроса, "ГрафикПоступленияТоваровОстатки") > 0 Тогда 
		Возврат;
	КонецЕсли;
	
	СписокНоменклатура.ТекстЗапроса = СтрЗаменить(СписокНоменклатура.ТекстЗапроса, "КОНЕЦ, 1) КАК ЧИСЛО(15, 3)) КАК Доступно", "КОНЕЦ, 1) КАК ЧИСЛО(15, 3)) КАК Доступно,
		|	ЕСТЬNULL(ГрафикПоступленияТоваровОстатки.КоличествоИзЗаказовОстаток, 0) КАК Ожидается");
	СписокНоменклатура.ТекстЗапроса = СтрЗаменить(СписокНоменклатура.ТекстЗапроса, "ПО (КурсыСрезПоследнихВалютаЦены.Валюта = ЦеныНоменклатуры.Валюта)", "ПО (КурсыСрезПоследнихВалютаЦены.Валюта = ЦеныНоменклатуры.Валюта)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ГрафикПоступленияТоваров.Остатки(, Склад В ИЕРАРХИИ (&Склад)) КАК ГрафикПоступленияТоваровОстатки
		|		ПО СправочникНоменклатура.Ссылка = ГрафикПоступленияТоваровОстатки.Номенклатура");
	
КонецПроцедуры

&НаСервере
Процедура ПодборТоваров_УстановитьУсловноеОформлениеДинамическихСписков(Форма, ЭтоФормаПодбораВДокументыЗакупки = Ложь)
	ЭтоПартнер = ПраваПользователяПовтИсп.ЭтоПартнер();
	
	Если Не ЭтоПартнер Тогда
	
		Элемент = УсловноеОформление.Элементы.Добавить();
		
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокРасширенныйПоискНоменклатураОжидается.Имя);
		
		ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
		ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокНоменклатура.Ожидается");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = 0;
		
		ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокНоменклатура.ТипНоменклатуры");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
		СписокЗначений = Новый СписокЗначений;
		СписокЗначений.Добавить(Перечисления.ТипыНоменклатуры.Работа);
		СписокЗначений.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
		СписокЗначений.Добавить(Перечисления.ТипыНоменклатуры.Набор);
		ОтборЭлемента.ПравоеЗначение = СписокЗначений;
		
		Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<нет>'"));
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

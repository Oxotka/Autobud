
#Область СлужебныеПроцедурыИФункции

Функция КУТ_ЗаголовокНадписиВзаиморасчетов(Партнер, Должны, СуммаДолга = 0) Экспорт
	
	КрупныйШрифт = Новый Шрифт(,11);
	МелкийШрифт  = Новый Шрифт(,8);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РегистрАналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РегистрАналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	РегистрАналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РегистрАналитикаУчетаПоПартнерам.Договор КАК Договор,
	|	РасчетыСКлиентами.Валюта КАК ВалютаВзаиморасчетов,
	|	РасчетыСКлиентами.ДолгКонечныйОстаток КАК ДолгКонечныйОстаток,
	|	РасчетыСКлиентами.ДолгРеглКонечныйОстаток КАК ДолгРеглКонечныйОстаток,
	|	""Клиент"" КАК ВзаиморасчетыС
	|ПОМЕСТИТЬ втВзаиморасчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам.ОстаткиИОбороты(, , Авто, , ) КАК РасчетыСКлиентами
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСКлиентами.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Партнер = &Партнер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам,
	|	РегистрАналитикаУчетаПоПартнерам.Организация,
	|	РегистрАналитикаУчетаПоПартнерам.Партнер,
	|	РегистрАналитикаУчетаПоПартнерам.Контрагент,
	|	РегистрАналитикаУчетаПоПартнерам.Договор,
	|	РасчетыСПоставщиками.Валюта,
	|	РасчетыСПоставщиками.ДолгКонечныйОстаток,
	|	РасчетыСПоставщиками.ДолгРеглКонечныйОстаток,
	|	""Поставщик""
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам.ОстаткиИОбороты(, , Авто, , ) КАК РасчетыСПоставщиками
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики}
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	И РегистрАналитикаУчетаПоПартнерам.Партнер = &Партнер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втВзаиморасчеты.Партнер КАК Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА втВзаиморасчеты.ВзаиморасчетыС = ""Клиент""
	|				ТОГДА втВзаиморасчеты.ДолгКонечныйОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДолгНамРегл,
	|	СУММА(ВЫБОР
	|			КОГДА втВзаиморасчеты.ВзаиморасчетыС = ""Поставщик""
	|				ТОГДА -втВзаиморасчеты.ДолгКонечныйОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДолгНашРегл
	|ПОМЕСТИТЬ втОстРегл
	|ИЗ
	|	втВзаиморасчеты КАК втВзаиморасчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	втВзаиморасчеты.Партнер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втВзаиморасчеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втОстРегл.ДолгНамРегл ЕСТЬ NULL 
	|			ТОГДА ""0""
	|		ИНАЧЕ втОстРегл.ДолгНамРегл
	|	КОНЕЦ КАК ДолгНам,
	|	ВЫБОР
	|		КОГДА втОстРегл.ДолгНашРегл ЕСТЬ NULL 
	|			ТОГДА ""0""
	|		ИНАЧЕ втОстРегл.ДолгНашРегл
	|	КОНЕЦ КАК ДолгНаш
	|ИЗ
	|	втОстРегл КАК втОстРегл";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДолгНам = Выборка.ДолгНам;
		ДолгНаш = Выборка.ДолгНаш;
	Иначе
		ДолгНам = 0;
		ДолгНаш = 0;
	КонецЕсли;
	
	КомпонентыФС = Новый Массив;
	Если Должны = "Мы" Тогда
		СуммаДолга = ДолгНаш;
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Мы должны'") + " ", КрупныйШрифт));
	Иначе
		СуммаДолга = ДолгНам;
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Должен нам'") + " ", КрупныйШрифт));
	КонецЕсли;
	
	СуммаСтрокой = Формат(СуммаДолга, "ЧДЦ=2; ЧРД=,; ЧРГ=' '; ЧН=0,00");
	ПозицияРазделителя = СтрНайти(СуммаСтрокой, ",");
	КомпонентыЧисла = Новый Массив;
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Лев(СуммаСтрокой, ПозицияРазделителя), КрупныйШрифт));
	КомпонентыЧисла.Добавить(Новый ФорматированнаяСтрока(Сред(СуммаСтрокой, ПозицияРазделителя+1), МелкийШрифт));
	КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(КомпонентыЧисла, , , , "Взаиморасчеты"));
	
	КомпонентыФС.Добавить(" " + Константы.ВалютаРегламентированногоУчета.Получить().Наименование);
	
	Возврат Новый ФорматированнаяСтрока(КомпонентыФС, , ЦветаСтиля.ПоясняющийТекст);
	
КонецФункции

#КонецОбласти

#Область ПанельДополнительнойИнформации

&НаСервере
Процедура КУТ_ПрочитатьДанныеПанелиДопИнформации()
	
	Элементы.ПанельДополнительнойИнформации.Видимость = ЗначениеЗаполнено(Объект.Ссылка);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	КрупныйШрифт = Новый Шрифт(,11);
	МелкийШрифт  = Новый Шрифт(,8);
	
	
	// 1. Остаток взаиморасчетов
	
	Элементы.ОстатокВзаиморасчетовКлиент.Заголовок = КУТ_ЗаголовокНадписиВзаиморасчетов(Объект.Ссылка,"Нам");
	Элементы.ОстатокВзаиморасчетовПоставщик.Заголовок = КУТ_ЗаголовокНадписиВзаиморасчетов(Объект.Ссылка,"Мы");
	
	// 2. Последняя продажа
	
	Если Объект.Клиент Тогда
		
		Элементы.ПоследняяПродажа.Видимость = Истина;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Партнер", Объект.Ссылка);
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
		|	ВыручкаИСебестоимостьПродажОбороты.Регистратор КАК Документ,
		|	ВыручкаИСебестоимостьПродажОбороты.Период КАК Дата
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(, , Регистратор, ) КАК ВыручкаИСебестоимостьПродажОбороты
		|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
		|		ПО (ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики)}
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимостьПродажОбороты.Регистратор) = ТИП(Документ.РеализацияТоваровУслуг)
		|	И РегистрАналитикаУчетаПоПартнерам.Партнер = &Партнер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Дата = Выборка.Дата;
			НавСсылка = ПолучитьНавигационнуюСсылку(Выборка.Документ);
		Иначе
			Дата = '00010101';
			НавСсылка = "";
		КонецЕсли;
		
		КомпонентыФС = Новый Массив;
		КомпонентыФС.Добавить(НСтр("ru='Последняя продажа'") + " ");
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Формат(Дата, "Л=ru_RU; ДЛФ=D; ДП=<нет>"), , , , НавСсылка));
		
		Элементы.ПоследняяПродажа.Заголовок = Новый ФорматированнаяСтрока(КомпонентыФС, КрупныйШрифт, ЦветаСтиля.ПоясняющийТекст);
		
	Иначе
		
		Элементы.ПоследняяПродажа.Видимость = Ложь;
		
	КонецЕсли;
	
	// 3. Последняя покупка
	
	Если Объект.Поставщик или Объект.Перевозчик Тогда
		
		Элементы.ПоследняяПокупка.Видимость = Истина;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Партнер", Объект.Ссылка);
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Закупки.Регистратор КАК Документ,
		|	Закупки.Период КАК Дата
		|ИЗ
		|	РегистрНакопления.Закупки КАК Закупки
		|ГДЕ
		|	Закупки.Партнер = &Партнер
		|	И ТИПЗНАЧЕНИЯ(Закупки.Регистратор) = ТИП(Документ.ПоступлениеТоваровУслуг)
		|
		|СГРУППИРОВАТЬ ПО
		|	Закупки.Регистратор,
		|	Закупки.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Закупки.Период УБЫВ";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Дата = Выборка.Дата;
			НавСсылка = ПолучитьНавигационнуюСсылку(Выборка.Документ);
		Иначе
			Дата = '00010101';
			НавСсылка = "";
		КонецЕсли;
		
		КомпонентыФС = Новый Массив;
		КомпонентыФС.Добавить(НСтр("ru='Последняя покупка'") + " ");
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Формат(Дата, "Л=ru_RU; ДЛФ=D; ДП=<нет>"), , , , НавСсылка));
		
		Элементы.ПоследняяПокупка.Заголовок = Новый ФорматированнаяСтрока(КомпонентыФС, КрупныйШрифт, ЦветаСтиля.ПоясняющийТекст);
		
	Иначе 
		
		Элементы.ПоследняяПокупка.Видимость = Ложь;
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура КУТ_ПриОткрытии(Отказ)
	
	КУТ_ПрочитатьДанныеПанелиДопИнформации();
	
КонецПроцедуры

&НаСервере
Процедура КУТ_ПриЧтенииНаСервере(ТекущийОбъект)
	
	КУТ_ПрочитатьДанныеПанелиДопИнформации();
	
КонецПроцедуры

&НаСервере
Процедура КУТ_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КУТ_ПрочитатьДанныеПанелиДопИнформации();
	
КонецПроцедуры

&НаКлиенте
Процедура КУТ_ОстатокВзаиморасчетовКлиентОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Объект;	
	
	УсловияОтбора = Новый Структура("Партнер", ТекущиеДанные.Ссылка);
	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", УсловияОтбора, Истина);
	
	ОткрытьФорму("Отчет.РасчетыСКлиентами.Форма", 	 ПараметрыФормы,ЭтотОбъект, ТекущиеДанные.Ссылка);  
	
КонецПроцедуры

&НаКлиенте
Процедура КУТ_ОстатокВзаиморасчетовПоставщикОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Объект;	
	
	УсловияОтбора = Новый Структура("Партнер", ТекущиеДанные.Ссылка);
	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", УсловияОтбора, Истина);
	
	ОткрытьФорму("Отчет.РасчетыСПоставщиками.Форма", ПараметрыФормы,ЭтотОбъект, ТекущиеДанные.Ссылка); 
	
КонецПроцедуры

&НаКлиенте
Процедура КУТ_ПриИзмененииВидаПартнера(Элемент)
	
	КУТ_ПрочитатьДанныеПанелиДопИнформации();
	
КонецПроцедуры

#КонецОбласти



#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПрефиксАртикула = "TH ";
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)
	
#Если ВебКлиент Тогда
	ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Загрузка из Excel недоступна в Web-клиенте.'"));
#Иначе
	Оповещение = Новый ОписаниеОповещения("ЗагрузкаПоОтчету_ЗагрузитьИзExcelЗавершениеПодключенияРасширения", ЭтотОбъект);
	ТекстСообщения = НСтр("ru = 'Для загрузки из Excel необходимо установить расширение работы с файлами.'");
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(Оповещение, ТекстСообщения);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуруПоставщика(Команда)
	Если Не ЗначениеЗаполнено(Партнер) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено поле ""Партнер""", , "Партнер");
		Возврат;
	КонецЕсли;
	СоздатьНоменклатуруПоставщикаНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузкаПоОтчету_ЗагрузитьИзExcelЗавершениеПодключенияРасширения(Результат, ДополнительныеПараметры) Экспорт
	
#Если НЕ ВебКлиент Тогда
	Если ПодключитьРасширениеРаботыСФайлами()Тогда
		Попытка
			COMОбъект = Новый COMОбъект("Excel.Application");
		Исключение
			СообщениеОбОшибке = НСтр("ru = 'Не удалось загрузить информацию по документам Поступления товаров.
			                               |Убедитесь, что на сервере установлена программа Microsoft Excel.
			                               |Подробности:'")
			                    + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			ВызватьИсключение СообщениеОбОшибке;
		КонецПопытки;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Форма", ЭтотОбъект);
		ДополнительныеПараметры.Вставить("COMОбъект", COMОбъект);
		
		ИмяВременногоФайла = Неопределено;
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Фильтр = НСтр("ru = 'Файлы Excel (*.xls)|*.xls'");
		ДиалогВыбораФайла.Фильтр = Фильтр;
		ДиалогВыбораФайла.Показать(
				Новый ОписаниеОповещения("ЗагрузкаПоОтчету_ЗагрузитьИзExcelДиалогВыбораФайлаЗавершение",
				ЭтотОбъект,
				ДополнительныеПараметры));
	Иначе
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Расширение работы с файлами не подключено.'"));
	КонецЕсли;
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаПоОтчету_ЗагрузитьИзExcelДиалогВыбораФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма           = ДополнительныеПараметры.Форма;
	COMОбъект       = ДополнительныеПараметры.COMОбъект;
	
	Попытка
		Workbook      = COMОбъект.Workbooks.Open(ВыбранныеФайлы[0],,Истина,,,,,,,,Ложь);
		SettingsSheet = Workbook.Worksheets(1);
	Исключение
		COMОбъект.Quit();
		COMОбъект = 0;
		СообщениеОбОшибке = СтрШаблон(
			НСтр("ru = 'Файл не может быть загружен.
			           |Загружаться могут только файлы, выгруженные с помощью команды ""Excel -> Выгрузить..."".
			           |Подробности: %1'"), КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение СообщениеОбОшибке;
	КонецПопытки;
	
	// Массивы структур
	МассивСтруктурВидыЦен = Новый Массив;
	МассивСтруктурТовары  = Новый Массив;
	
	ЕстьДополнительнаяКолонка = Ложь;
	
	// Загрузка данных
	Попытка
		НоменклатураДляЗагрузки.Очистить();
		
		// Проверка шапки документа
		НомерСтроки = 2;
		Для СтрокаПоиска = 2 По 100 Цикл
			НомерСтроки = СтрокаПоиска;
			Если SettingsSheet.Cells(НомерСтроки, 1).Value = НСтр("ru = 'Продажи по клиенту'") Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если СтрокаПоиска = 100 Тогда
			ВызватьИсключение НСтр("ru = 'Загружаемый файл не соответствует отчету ""Продажи по клиенту""'");
		КонецЕсли;
		
		НомерСтроки                = СтрокаПоиска + 7;// После найденного заголовка две пустые строки и четыре строчки с заголовком таблицы.
		ЭтоНовыйДокументРеализации = Ложь;
		ДокументРеализации         = "";
		НоваяСтрока                = Неопределено;
		ВыделятьЦветом             = Ложь;
		
		Пока ЗначениеЗаполнено(SettingsSheet.Cells(НомерСтроки, 1).Value) Цикл
			
			ЭтоНовыйДокументРеализации = СтрНайти(SettingsSheet.Cells(НомерСтроки, 1).Value, НСтр("ru = 'Реализация товаров и услуг'")) <> 0;
			Если ЭтоНовыйДокументРеализации Тогда
				ДокументРеализации = SettingsSheet.Cells(НомерСтроки, 1).Value;
				ВыделятьЦветом     = Не ВыделятьЦветом;
			ИначеЕсли Не ЭтоНовыйДокументРеализации Тогда
				Если СтрНайти(SettingsSheet.Cells(НомерСтроки, 1).Value, НСтр("ru = 'Итого'")) <> 0 Тогда
					Прервать;
				КонецЕсли;
				НоваяСтрока = НоменклатураДляЗагрузки.Добавить();
				НоваяСтрока.ДокументРеализации = ДокументРеализации;
				НоваяСтрока.Номенклатура       = SettingsSheet.Cells(НомерСтроки, 1).Value;
				НоваяСтрока.Артикул            = SettingsSheet.Cells(НомерСтроки, 11).Value;
				КоличествоСтрокой = СтрЗаменить(SettingsSheet.Cells(НомерСтроки, 12).Value, " ", "");
				СуммаСтрокой      = СтрЗаменить(SettingsSheet.Cells(НомерСтроки, 13).Value, " ", "");
				НоваяСтрока.ВыделятьЦветом     = ВыделятьЦветом;
				Если ЗагрузкаПоОтчету_ЭтоЧисло(КоличествоСтрокой) И ЗагрузкаПоОтчету_ЭтоЧисло(СуммаСтрокой) Тогда
					Количество = Число(СтрЗаменить(КоличествоСтрокой, ",", "."));
					Сумма      = Число(СтрЗаменить(СуммаСтрокой, ",", "."));
					НоваяСтрока.Количество = Количество;
					НоваяСтрока.Сумма      = Сумма;
					Если Количество <> 0 Тогда
						НоваяСтрока.Цена = Сумма/Количество;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		Workbook.Close(0);
		
	Исключение
		COMОбъект.Quit();
		COMОбъект = 0;
		СообщениеОбОшибке = СтрШаблон(
			НСтр("ru = 'Файл не может быть загружен.
			           |Загружаться могут только файлы, выгруженные с помощью команды ""Excel -> Выгрузить..."".
			           |Подробности: %1'"), КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение СообщениеОбОшибке;
	КонецПопытки;
	
	COMОбъект.Quit();
	COMОбъект = 0;
	
	Если НоменклатураДляЗагрузки.Количество() > 0 Тогда
		ЗаполнитьТаблицуНоменклатуры();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНоменклатуры()
	
	Объект.НоменклатураПоставщика.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаТовары.Артикул,
	               |	ТаблицаТовары.Номенклатура,
	               |	&Префикс + ТаблицаТовары.Артикул КАК АртикулДляСоединения
	               |ПОМЕСТИТЬ ТаблицаТоварыИзФайла
	               |ИЗ
	               |	&ТаблицаТовары КАК ТаблицаТовары
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаТоварыИзФайла.Артикул КАК АртикулИзФайла,
	               |	ТаблицаТоварыИзФайла.Номенклатура КАК НаименованиеИзФайла,
	               |	ТаблицаТоварыИзФайла.АртикулДляСоединения,
	               |	НоменклатураПоставщиков.Ссылка КАК НоменклатураПоставщика,
	               |	НоменклатураПоставщиков.Артикул КАК АртикулВБазе,
	               |	ЕСТЬNULL(НоменклатураПоставщиков.Номенклатура, ЛОЖЬ) КАК Номенклатура,
	               |	СпрНоменклатура.Ссылка КАК НоменклатураСсылка
	               |ПОМЕСТИТЬ НоменклатураДляЗагрузки
	               |ИЗ
	               |	ТаблицаТоварыИзФайла КАК ТаблицаТоварыИзФайла
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	               |		ПО (ТаблицаТоварыИзФайла.АртикулДляСоединения = НоменклатураПоставщиков.Артикул
	               |				ИЛИ НоменклатураПоставщиков.Наименование = ТаблицаТоварыИзФайла.Номенклатура
	               |					И НоменклатураПоставщиков.Владелец = &Партнер)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	               |		ПО ТаблицаТоварыИзФайла.АртикулДляСоединения = СпрНоменклатура.Артикул
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НоменклатураДляЗагрузки.АртикулИзФайла,
	               |	НоменклатураДляЗагрузки.НаименованиеИзФайла,
	               |	НоменклатураДляЗагрузки.АртикулДляСоединения,
	               |	НоменклатураДляЗагрузки.НоменклатураПоставщика,
	               |	НоменклатураДляЗагрузки.АртикулВБазе,
	               |	ВЫБОР
	               |		КОГДА НоменклатураДляЗагрузки.Номенклатура = ЛОЖЬ
	               |				ИЛИ НоменклатураДляЗагрузки.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	               |			ТОГДА НоменклатураДляЗагрузки.НоменклатураСсылка
	               |		ИНАЧЕ НоменклатураДляЗагрузки.Номенклатура
	               |	КОНЕЦ КАК Номенклатура
	               |ИЗ
	               |	НоменклатураДляЗагрузки КАК НоменклатураДляЗагрузки";
	
	
	Запрос.УстановитьПараметр("ТаблицаТовары", НоменклатураДляЗагрузки.Выгрузить());
	Запрос.УстановитьПараметр("Префикс", ПрефиксАртикула);
	Запрос.УстановитьПараметр("Партнер", Партнер);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Объект.НоменклатураПоставщика.Загрузить(ТЗ);
	
КонецПроцедуры

&НаКлиенте
Функция ЗагрузкаПоОтчету_ЭтоЧисло(Строка)
	
	ЗначениеВозврата = Истина;
	Попытка
		Число = Число(Строка);
	Исключение
		ЗначениеВозврата = Ложь;
	КонецПопытки;
	
	Возврат ЗначениеВозврата;
	
КонецФункции

&НаСервере
Процедура СоздатьНоменклатуруПоставщикаНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	НачатьТранзакцию();
	Попытка
		Для Каждого Номенклатура Из Объект.НоменклатураПоставщика Цикл
			Если ЗначениеЗаполнено(Номенклатура.Номенклатура)
					И ЗначениеЗаполнено(Номенклатура.НоменклатураПоставщика)
					И ЗначениеЗаполнено(Номенклатура.НоменклатураПоставщика.Наименование)
					И Номенклатура.Номенклатура = Номенклатура.НоменклатураПоставщика.Номенклатура Тогда
				Продолжить;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Номенклатура.Номенклатура) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"В строке %1 не заполнена номенклатура для сопоставления.", Номенклатура.НомерСтроки));
				Продолжить;		
			КонецЕсли;
			Если ЗначениеЗаполнено(Номенклатура.НоменклатураПоставщика) Тогда
				НоваяНоменклатурПоставщика = Номенклатура.НоменклатураПоставщика.ПолучитьОбъект();
				НоваяНоменклатурПоставщика.Номенклатура = Номенклатура.Номенклатура;
				Если ПустаяСтрока(Номенклатура.НоменклатураПоставщика.Наименование) Тогда
					НоваяНоменклатурПоставщика.Наименование = Номенклатура.НаименованиеИзФайла;
				КонецЕсли;
				НоваяНоменклатурПоставщика.Владелец     = Партнер;
				НоваяНоменклатурПоставщика.Записать();
			Иначе
				НоваяНоменклатурПоставщика = Справочники.НоменклатураПоставщиков.СоздатьЭлемент();
				НоваяНоменклатурПоставщика.Артикул      = Номенклатура.АртикулИзФайла;
				НоваяНоменклатурПоставщика.Наименование = Номенклатура.НаименованиеИзФайла;
				НоваяНоменклатурПоставщика.Номенклатура = Номенклатура.Номенклатура;
				НоваяНоменклатурПоставщика.Владелец     = Партнер;
				НоваяНоменклатурПоставщика.Записать();
			КонецЕсли;
			Номенклатура.НоменклатураПоставщика = НоваяНоменклатурПоставщика.Ссылка;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"В строке %1 не удалось создать или обновить номенклатуру поставщика по причине: %2.", Номенклатура.НомерСтроки, ТекстОшибки));
		ОтменитьТранзакцию();
	КонецПопытки;
КонецПроцедуры

#КонецОбласти
#Область ОбработчикиКомандФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВидыЦен.Ссылка
		|ИЗ
		|	Справочник.ВидыЦен КАК ВидыЦен";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВидЦены = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	BUYER     = "0000000000000";
	SUPPLIER  = "0000000000000";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КаталогВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Не ПустаяСтрока(Элемент.ТекстРедактирования) Тогда
		Файл = Новый Файл(Элемент.ТекстРедактирования);
		Если Не Файл.Существует() Тогда
			ТекстПредупреждения = НСтр("ru = 'Невозможно открыть папку, так как она не существует.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		ЗапуститьПриложение(Элемент.ТекстРедактирования);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КаталогВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	// Открытие окна выбора папки сохранения.
	СтандартнаяОбработка = Ложь;
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ВыборФайла.МножественныйВыбор = Ложь;
	ВыборФайла.Каталог = Элемент.ТекстРедактирования;
	Если ВыборФайла.Выбрать() Тогда
		КаталогВыгрузки = ВыборФайла.Каталог + ПолучитьРазделительПути();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьОстатки(Команда)
	
	КаталогВыгрузкиДляПроверки = Новый Файл(КаталогВыгрузки);
	
	Если Не КаталогВыгрузкиДляПроверки.Существует() Тогда
		ПоказатьПредупреждение(, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Папка ""%1"" не найдена.
			           |Выберите другую папку.'"),
			КаталогВыгрузки));
		Возврат;
	КонецЕсли;
	
	// 1. Остатки выгружаются в XML файл в кодировке UTF-8.
	// 2. Имя файла должно быть вида STOCAT_YYYYMMDD_HHMMSS.XML
	// 3. Расширение файла XML указывать обязательно.
	ДатаВыгрузки = ТекущаяДата();
	ПутьКФайлу = КаталогВыгрузки + "STOCAT_" + Формат(ДатаВыгрузки,"ДФ=yyyyMMdd") + "_" + Формат(ДатаВыгрузки,"ДФ=hhmmss") + ".xml";
	Запись = Новый ЗаписьXML;
	Запись.ОткрытьФайл(ПутьКФайлу, "UTF-8"); 
	Запись.ЗаписатьОбъявлениеXML(); //<?xml version="1.0" encoding="UTF-8"?>
	Запись.ЗаписатьНачалоЭлемента("STOCAT");// Stocat начало.
	
	ЗаписатьЭлементXML(Запись, "DATE", Формат(ДатаВыгрузки,"ДФ=yyyy-MM-dd"));
	ЗаписатьЭлементXML(Запись, "TIME", Формат(ДатаВыгрузки,"ДФ=HH:mm"));
	ЗаписатьЭлементXML(Запись, "STOCKDATE", Формат(ДатаВыгрузки,"ДФ=yyyy-MM-dd"));
	
	ЗаписатьЭлементXML(Запись, "INFO", Комментарий);

	Запись.ЗаписатьНачалоЭлемента("HEAD");// HEAD начало.
	
	ЗаписатьЭлементXML(Запись, "SUPPLIER",     SUPPLIER);
	ЗаписатьЭлементXML(Запись, "BUYER",        BUYER);
	ЗаписатьЭлементXML(Запись, "SENDER",       SUPPLIER);
	ЗаписатьЭлементXML(Запись, "RECIPIENT",    BUYER);
#Область Position
	РассчитатьОстаткиТоваров(ДатаВыгрузки);
	ПорядковыйНомер = 1;
	Для Каждого Стр Из ОстаткиНоменклатуры Цикл
		Запись.ЗаписатьНачалоЭлемента("POSITION");// POSITION начало.
		ЗаписатьЭлементXML(Запись, "POSITIONNUMBER",    Формат(ПорядковыйНомер,"ЧГ="));
		ЗаписатьЭлементXML(Запись, "PRODUCT",           Штрихкод(Стр.ШтрихКод));
		ЗаписатьЭлементXML(Запись, "PRODUCTIDBUYER",    Стр.Артикул);
		ЗаписатьЭлементXML(Запись, "PRODUCTIDSUPPLIER", Стр.Артикул);
		ЗаписатьЭлементXML(Запись, "DESCRIPTION",       Стр.НаименованиеПолное);
		ЗаписатьЭлементXML(Запись, "UNIT",              Строка(Стр.ЕдиницаИзмерения));
		ЗаписатьЭлементXML(Запись, "STOCKQUANTITY",     Формат(Стр.Остаток, "ЧДЦ=2; ЧС=; ЧРД=.; ЧН=0.00; ЧГ="));
		ЗаписатьЭлементXML(Запись, "PRICE",             Формат(Стр.Цена, "ЧДЦ=2; ЧС=; ЧРД=.; ЧН=0.00; ЧГ="));
		ЗаписатьЭлементXML(Запись, "NETPRICE",          Формат(Стр.ЦенаБезНДС, "ЧДЦ=2; ЧС=; ЧРД=.; ЧН=0.00; ЧГ="));
		ЗаписатьЭлементXML(Запись, "VAT",               Формат(Стр.СтавкаНДСЧислом, "ЧДЦ=2; ЧС=; ЧРД=.; ЧН=0.00; ЧГ="));
		Запись.ЗаписатьКонецЭлемента();// POSITION конец.
		ПорядковыйНомер = ПорядковыйНомер + 1;
	КонецЦикла;
#КонецОбласти
	
	Запись.ЗаписатьКонецЭлемента();// HEAD конец.
	
	Запись.ЗаписатьКонецЭлемента();// Stocat конец.
	
	Запись.Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаписатьЭлементXML(ЗаписьXML, ИмяЭлемента, ЗначениеЭлемента)
	
	ЗаписьXML.ЗаписатьНачалоЭлемента(ИмяЭлемента);
	ЗаписьXML.ЗаписатьТекст(СокрЛП(ЗначениеЭлемента));
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьОстаткиТоваров(ДатаВыгрузки)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоменклатураСправочник.Ссылка КАК Номенклатура,
		|	НоменклатураСправочник.Артикул,
		|	НоменклатураСправочник.НаименованиеПолное,
		|	СвободныеОстаткиОстатки.ВНаличииОстаток КАК Остаток,
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
		|	НоменклатураСправочник.ЕдиницаИзмерения,
		|	НоменклатураСправочник.СтавкаНДС,
		|	0 КАК НДС,
		|	0 КАК ЦенаБезНДС,
		|	ЕСТЬNULL(ВидыЦен.ЦенаВключаетНДС, ИСТИНА) КАК ЦенаВключаетНДС,
		|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
		|	0 КАК СтавкаНДСЧислом
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЦен КАК ВидыЦен
		|		ПО ЦеныНоменклатурыСрезПоследних.ВидЦены = ВидыЦен.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(&Период, ) КАК СвободныеОстаткиОстатки
		|			ПО НоменклатураСправочник.Ссылка = СвободныеОстаткиОстатки.Номенклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|			ПО НоменклатураСправочник.Ссылка = ШтрихкодыНоменклатуры.Номенклатура
		|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = НоменклатураСправочник.Ссылка";
	
	Запрос.УстановитьПараметр("Период",  ДатаВыгрузки);
	Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаОстатков = РезультатЗапроса.Выгрузить();
	Для Каждого Стр Из ТаблицаОстатков Цикл
		Стр.СтавкаНДСЧислом = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(Стр.СтавкаНДС);
		Стр.НДС = Ценообразование.РассчитатьСуммуНДС(Стр.Цена, Стр.СтавкаНДС, Стр.ЦенаВключаетНДС);
		Стр.ЦенаБезНДС = Стр.Цена - Стр.НДС;
	КонецЦикла;
	ОстаткиНоменклатуры.Загрузить(ТаблицаОстатков);
	
КонецПроцедуры

&НаКлиенте
Функция Штрихкод(Знач Штрихкод)
	
	Штрихкод = СокрЛП(?(ШтрихКод = Null, "", ШтрихКод));
	Возврат ?(СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Штрихкод), Штрихкод, "");
	
КонецФункции

#КонецОбласти

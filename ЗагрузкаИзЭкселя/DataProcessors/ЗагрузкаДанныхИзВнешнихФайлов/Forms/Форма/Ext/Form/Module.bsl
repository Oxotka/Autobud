#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)
	
#Если ВебКлиент Тогда
	ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Загрузка из Excel недоступна в Web-клиенте.'"));
#Иначе
	Оповещение = Новый ОписаниеОповещения("ЗагрузкаПоОтчету_ЗагрузитьИзExcelЗавершениеПодключенияРасширения", ЭтотОбъект);
	ТекстСообщения = НСтр("ru = 'Для загрузки из Excel необходимо установить расширение работы с файлами.'");
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(Оповещение, ТекстСообщения);
#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузкаПоОтчету_ЗагрузитьИзExcelЗавершениеПодключенияРасширения(Результат, ДополнительныеПараметры) Экспорт
	
#Если НЕ ВебКлиент Тогда
	Если ПодключитьРасширениеРаботыСФайлами()Тогда
		Попытка
			COMОбъект = Новый COMОбъект("Excel.Application");
		Исключение
			СообщениеОбОшибке = НСтр("ru = 'Не удалось загрузить информацию по документам Поступления товаров.
			                               |Убедитесь, что на сервере установлена программа Microsoft Excel.
			                               |Подробности:'")
			                    + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			ВызватьИсключение СообщениеОбОшибке;
		КонецПопытки;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Форма", ЭтотОбъект);
		ДополнительныеПараметры.Вставить("COMОбъект", COMОбъект);
		
		ИмяВременногоФайла = Неопределено;
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Фильтр = НСтр("ru = 'Файлы Excel (*.xls)|*.xls'");
		ДиалогВыбораФайла.Фильтр = Фильтр;
		ДиалогВыбораФайла.Показать(
				Новый ОписаниеОповещения("ЗагрузкаПоОтчету_ЗагрузитьИзExcelДиалогВыбораФайлаЗавершение",
				ЭтотОбъект,
				ДополнительныеПараметры));
	Иначе
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Расширение работы с файлами не подключено.'"));
	КонецЕсли;
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаПоОтчету_ЗагрузитьИзExcelДиалогВыбораФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма           = ДополнительныеПараметры.Форма;
	COMОбъект       = ДополнительныеПараметры.COMОбъект;
	
	Попытка
		Workbook      = COMОбъект.Workbooks.Open(ВыбранныеФайлы[0],,Истина,,,,,,,,Ложь);
		SettingsSheet = Workbook.Worksheets(1);
	Исключение
		COMОбъект.Quit();
		COMОбъект = 0;
		СообщениеОбОшибке = СтрШаблон(
			НСтр("ru = 'Файл не может быть загружен.
			           |Загружаться могут только файлы, выгруженные с помощью команды ""Excel -> Выгрузить..."".
			           |Подробности: %1'"), КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение СообщениеОбОшибке;
	КонецПопытки;
	
	// Массивы структур
	МассивСтруктурВидыЦен = Новый Массив;
	МассивСтруктурТовары  = Новый Массив;
	
	ЕстьДополнительнаяКолонка = Ложь;
	
	// Загрузка данных
	Попытка
		НоменклатураДляЗагрузки.Очистить();
		
		// Проверка шапки документа
		НомерСтроки = 2;
		Для СтрокаПоиска = 2 По 100 Цикл
			НомерСтроки = СтрокаПоиска;
			Если SettingsSheet.Cells(НомерСтроки, 1).Value = НСтр("ru = 'Продажи по клиенту'") Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если СтрокаПоиска = 100 Тогда
			ВызватьИсключение НСтр("ru = 'Загружаемый файл не соответствует отчету ""Продажи по клиенту""'");
		КонецЕсли;
		
		НомерСтроки                = СтрокаПоиска + 7;// После найденного заголовка две пустые строки и четыре строчки с заголовком таблицы.
		ЭтоНовыйДокументРеализации = Ложь;
		ДокументРеализации         = "";
		НоваяСтрока                = Неопределено;
		ВыделятьЦветом             = Ложь;
		
		Пока ЗначениеЗаполнено(SettingsSheet.Cells(НомерСтроки, 1).Value) Цикл
			
			ЭтоНовыйДокументРеализации = СтрНайти(SettingsSheet.Cells(НомерСтроки, 1).Value, НСтр("ru = 'Реализация товаров и услуг'")) <> 0;
			Если ЭтоНовыйДокументРеализации Тогда
				ДокументРеализации = SettingsSheet.Cells(НомерСтроки, 1).Value;
				ВыделятьЦветом     = Не ВыделятьЦветом;
			ИначеЕсли Не ЭтоНовыйДокументРеализации Тогда
				Если СтрНайти(SettingsSheet.Cells(НомерСтроки, 1).Value, НСтр("ru = 'Итого'")) <> 0 Тогда
					Прервать;
				КонецЕсли;
				НоваяСтрока = НоменклатураДляЗагрузки.Добавить();
				НоваяСтрока.ДокументРеализации = ДокументРеализации;
				НоваяСтрока.Номенклатура       = SettingsSheet.Cells(НомерСтроки, 1).Value;
				НоваяСтрока.Артикул            = SettingsSheet.Cells(НомерСтроки, 11).Value;
				КоличествоСтрокой = СтрЗаменить(SettingsSheet.Cells(НомерСтроки, 12).Value, " ", "");
				СуммаСтрокой      = СтрЗаменить(SettingsSheet.Cells(НомерСтроки, 13).Value, " ", "");
				НоваяСтрока.ВыделятьЦветом     = ВыделятьЦветом;
				Если ЗагрузкаПоОтчету_ЭтоЧисло(КоличествоСтрокой) И ЗагрузкаПоОтчету_ЭтоЧисло(СуммаСтрокой) Тогда
					Количество = Число(СтрЗаменить(КоличествоСтрокой, ",", "."));
					Сумма      = Число(СтрЗаменить(СуммаСтрокой, ",", "."));
					НоваяСтрока.Количество = Количество;
					НоваяСтрока.Сумма      = Сумма;
					Если Количество <> 0 Тогда
						НоваяСтрока.Цена = Сумма/Количество;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		Workbook.Close(0);
		
	Исключение
		COMОбъект.Quit();
		COMОбъект = 0;
		СообщениеОбОшибке = СтрШаблон(
			НСтр("ru = 'Файл не может быть загружен.
			           |Загружаться могут только файлы, выгруженные с помощью команды ""Excel -> Выгрузить..."".
			           |Подробности: %1'"), КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение СообщениеОбОшибке;
	КонецПопытки;
	
	COMОбъект.Quit();
	COMОбъект = 0;
	
	Если НоменклатураДляЗагрузки.Количество() > 0 Тогда
		ЗаполнитьТабличныйДокумент();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличныйДокумент()
	ИнициализироватьТабличныйДокумент();
	
	НомераКолонок = Новый Соответствие;
	НомерКолонки = 1;
	
	НомераКолонок.Вставить("КолонкаШтрихкод", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	НомераКолонок.Вставить("КолонкаКод", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	НомераКолонок.Вставить("КолонкаАртикул", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	НомераКолонок.Вставить("КолонкаНоменклатура", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	Если ИспользоватьХарактеристикиНоменклатуры Тогда
		НомераКолонок.Вставить("КолонкаХарактеристика", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
	КонецЕсли;
	Если ЗагружатьКоличество Тогда
		НомераКолонок.Вставить("КолонкаКоличество", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
	КонецЕсли;
	Если ЗагружатьЗапасы Тогда
		НомераКолонок.Вставить("КолонкаМинимальныйОстаток", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
		НомераКолонок.Вставить("КолонкаМаксимальныйОстаток", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
	КонецЕсли;
	Если ЗагружатьЦены Тогда
		НомераКолонок.Вставить("КолонкаЦена", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
	КонецЕсли;
	Если ЗагружатьСуммы Тогда
		Если ИспользоватьРучныеСкидкиВЗакупках И ЗагружатьСкидки Тогда
			НомераКолонок.Вставить("КолонкаПроцентРучнойСкидки", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
			НомерКолонки = НомерКолонки +1;
			НомераКолонок.Вставить("КолонкаСуммаРучнойСкидки", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
			НомерКолонки = НомерКолонки +1;
		КонецЕсли;
		НомераКолонок.Вставить("КолонкаСумма", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
		Если НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
			НомераКолонок.Вставить("КолонкаСуммаНДС", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
			НомерКолонки = НомерКолонки +1;
			Если НЕ ЦенаВключаетНДС Тогда
				НомераКолонок.Вставить("КолонкаСуммаСНДС", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
				НомерКолонки = НомерКолонки +1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ЗагружатьГТД Тогда
		НомераКолонок.Вставить("КолонкаНомерГТД", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
		НомераКолонок.Вставить("КолонкаСтранаПроисхождения", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
	КонецЕсли;
	
	НомерСтроки = 2;
	СтроковыйНомер = Формат(НомерСтроки, "ЧН=0; ЧГ=0");
	
	Для Каждого Стр Из НоменклатураДляЗагрузки Цикл
		ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаНоменклатура")).Текст = Стр.Номенклатура;
		ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаАртикул")).Текст      = Стр.Артикул;
		ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаКоличество")).Текст   = Стр.Количество;
		ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаЦена")).Текст         = Стр.Цена;
		ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаСумма")).Текст        = Стр.Сумма;
		НомерСтроки = НомерСтроки + 1;
		СтроковыйНомер = Формат(НомерСтроки, "ЧН=0; ЧГ=0");
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ЗагрузкаПоОтчету_ЭтоЧисло(Строка)
	
	ЗначениеВозврата = Истина;
	Попытка
		Число = Число(Строка);
	Исключение
		ЗначениеВозврата = Ложь;
	КонецПопытки;
	
	Возврат ЗначениеВозврата;
	
КонецФункции

#КонецОбласти
